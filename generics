using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace generics
{
    class Program
    {
        static void Main(string[] args)
        {
            KeyValuePair<string, int> meaning = new KeyValuePair<string, int> ("Life", 42); //declaration statement
            meaning.Print();

            Dictionary<string, int> prices = new Dictionary<string, int>(4);
            prices.Add("Watermelon", 5);
            prices.Add("Car", 100000);
            Console.WriteLine(prices["Watermelon"]);

            Console.WriteLine(Utility.CompareValue(10, false));
        }
    }

    class KeyValuePair<TKey, TValue> //generics example; types not values
    {
        public TKey key;
        public TValue value;

        public KeyValuePair(TKey _key, TValue _value)
        {
            key = _key;
            value = _value;
        }

        public void Print()
        {
            Console.WriteLine("Key: " + key.ToString());
            Console.WriteLine("Value: " + value.ToString());
        }
    }

    class Utility
    {
        public static bool CompareValue<T01, T02> (T01 value01, T02 value02)
        {
            return typeof(T01).Equals(typeof(T02));
        }
    }
}
