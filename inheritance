using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _2dArray
{
    //Inheritance - Extreme importance, pillar of object oriented programming
    //

    class Program
    {

        class Animal
        {
            public string name;
            public int age;
            public float happiness;

            public void PrintBase () //term with base relative
            {
                Console.WriteLine("Name: " + name);
                Console.WriteLine("Age: " + age);
                Console.WriteLine("Happiness: " + happiness);
            }
        }

        class Dog: Animal //Dog is a derived class of animal
        {
            public int spotCount;
            //public int happiness = 5f;

            public void Bark ()
            {
                Console.WriteLine("Wuf!");
                Console.WriteLine(base.happiness); //base.happiness grabs from the animal class, not the dog derived class
            }
        }

        class Cat: Animal //Cat will now derive from animal
        {
            public float cuteness;

            public void Meow ()
            {
                Console.WriteLine("Meow!");
            }
        }


        static void Main(string[] args)
        {
            Dog spotty = new Dog();
            spotty.name = "Spotty";
            spotty.age = 6;
            spotty.happiness = 0.5f;
            spotty.spotCount = 23;

            spotty.PrintBase();
            spotty.Bark();

            Console.WriteLine();

            Cat heisenberg = new Cat();
            heisenberg.name = "Heisenberg";
            heisenberg.age = 13;
            heisenberg.happiness = 24;
            heisenberg.cuteness = 134.2f;
            heisenberg.PrintBase();
            heisenberg.Meow();

            Console.ReadKey();
        }

    }
}
